{
  "common": {
    "user": "User",
    "cancel": "Cancel",
    "save": "Save",
    "create": "Create",
    "delete": "Delete",
    "edit": "Edit",
    "close": "Close",
    "back": "Back",
    "yes": "Yes",
    "no": "No",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "ok": "OK",
    "apply": "Apply",
    "confirm": "Confirm",
    "add": "Add",
    "remove": "Remove",
    "select": "Select",
    "search": "Search",
    "filter": "Filter",
    "clear": "Clear",
    "name": "Name",
    "type": "Type",
    "value": "Value",
    "size": "Size",
    "date": "Date",
    "status": "Status",
    "active": "Active",
    "inactive": "Inactive",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "required": "Required",
    "optional": "Optional",
    "copy": "Copy",
    "copied": "Copied!",
    "thinking": "Thinking",
    "unknownFile": "unknown file",
    "unknownSize": "unknown size",
    "currentDirectory": "current directory",
    "showLess": "Show less",
    "showMoreLines": "Show {{count}} more lines",
    "completedSuccessfully": "Completed successfully."
  },

  "navigation": {
    "backToHome": "Back to Home",
    "backToProjects": "Back to Projects",
    "home": "Home",
    "projects": "Projects",
    "mcpServers": "MCP Servers"
  },

  "dashboard": {
    "tagline": "Your ideas for the future are just a click away.",
    "projectsCard": {
      "title": "Projects",
      "description": "Manage your projects, view past discussions."
    },
    "mcpCard": {
      "title": "MCP Servers",
      "description": "Manage MCP configuration and settings."
    }
  },

  "titleBar": {
    "file": "File",
    "view": "View",
    "help": "Help",
    "home": "Home",
    "projects": "Projects",
    "mcpServers": "MCP Servers",
    "toggleDarkMode": "Toggle Dark Mode",
    "refresh": "Refresh",
    "about": "About {{name}}",
    "quit": "Quit {{name}}",
    "exit": "Exit"
  },

  "projects": {
    "title": "Projects",
    "addProject": "Add Project",
    "addingProject": "Adding Project...",
    "noProjectsFound": "No projects found.",
    "loadingProjects": "Loading projects…",
    "failedToLoad": "Failed to load projects.",
    "failedToAdd": "Failed to add project. Please try again.",
    "projectDetails": "Project details",
    "previousDiscussions": "Previous discussions",
    "newDiscussion": "New Discussion",
    "creating": "Creating...",
    "firstUsed": "First used:",
    "lastUpdated": "Last updated:",
    "noDiscussions": "You don't have any discussions with {{backendName}} yet.",
    "loadingDiscussions": "Loading discussions…",
    "invalidProjectId": "Invalid project ID",
    "failedToCreateDiscussion": "Failed to create discussion. Please ensure the required CLI is installed.",
    "newDiscussionTitle": "New Discussion - {{projectName}}",
    "started": "Started",
    "messages": "messages",
    "message": "message",
    "startTimeUnavailable": "Start time unavailable",
    "messagesUnavailable": "Messages: —",
    "backToHome": "Back to Home",
    "sha256Label": "SHA256:",
    "nameLabel": "Name:",
    "firstUsedLabel": "First used:",
    "lastUpdatedLabel": "Last updated:"
  },

  "conversations": {
    "title": "Conversations",
    "noConversationsYet": "No conversations yet",
    "startNewChat": "Start a new chat to begin",
    "searchingIn": "Searching in {{count}} conversation",
    "searchingIn_other": "Searching in {{count}} conversations",
    "conversationCount": "{{count}} conversation",
    "conversationCount_other": "{{count}} conversations",
    "count": "{{count}} conversation",
    "count_other": "{{count}} conversations",
    "endChat": "End Chat",
    "endChatConfirmation": "Are you sure you want to end the chat \"{{title}}\"? This will terminate the active session.",
    "endChatConfirm": "Are you sure you want to end the chat \"{{title}}\"? This will terminate the active session.",
    "endChatButton": "End Chat",
    "generating": "Generating...",
    "justNow": "Just now",
    "minutesAgo": "{{count}}m ago",
    "hoursAgo": "{{count}}h ago",
    "daysAgo": "{{count}}d ago",
    "pid": "PID: {{pid}}",
    "pidLabel": "PID: {{pid}}",
    "active": "Active",
    "inactive": "Inactive",
    "noConversations": "No conversations yet",
    "backend": "Backend",
    "selectBackend": "Select Backend",
    "language": "Language",
    "selectLanguage": "Select Language",
    "model": "Model",
    "selectModel": "Select Model",
    "authMethod": "Authentication Method",
    "selectAuthMethod": "Select Authentication Method",
    "apiKey": "API Key",
    "baseUrl": "Base URL",
    "oauth": "OAuth",
    "qwenConfiguration": "Qwen Code Configuration",
    "geminiApiKey": "Gemini API Key",
    "enterGeminiApiKey": "Enter your Gemini API key",
    "getApiKeyFrom": "Get your API key from",
    "gcpProjectId": "Google Cloud Project ID",
    "locationRegion": "Location/Region",
    "oauthLimits": "1000 free requests per day, 60 free requests per minute.",
    "cloudShellInfo": "This method works automatically in Google Cloud Shell environments",
    "stillWaiting": "Still waitin'...",
    "messageCount": "{{count}} message",
    "messageCount_other": "{{count}} messages"
  },

  "messages": {
    "typeToMention": "Type @ to mention files...",
    "rawJson": "Raw JSON",
    "messageRawJson": "Message Raw JSON",
    "cliInputOutputLogs": "CLI Input/Output Logs",
    "noCLILogs": "No CLI I/O logs available yet. Start a conversation to see the raw communication.",
    "viewCLILogs": "View CLI Input/Output"
  },

  "messageInput": {
    "placeholder": "Type @ to mention files...",
    "viewCliLogs": "View CLI Input/Output",
    "cliLogsTitle": "CLI Input/Output Logs",
    "logTypeIn": "IN",
    "logTypeOut": "OUT",
    "noLogsMessage": "No CLI I/O logs available yet. Start a conversation to see the raw communication."
  },

  "toolCalls": {
    "pendingApproval": "Pending approval...",
    "waitingForApproval": "Waiting for user approval",
    "approve": "Approve?",
    "allow": "Allow",
    "deny": "Deny",
    "reject": "Reject",
    "executing": "Executing...",
    "running": "Running...",
    "completed": "Completed",
    "failed": "Failed",
    "rejected": "Rejected",
    "userRejected": "Tool call rejected by user",
    "commandFailed": "Command failed.",
    "failedToExecute": "Failed to execute.",
    "googling": "Googling...",
    "fetching": "Fetching...",
    "searchingFiles": "Searching files...",
    "input": "Input:",
    "output": "Output:",
    "fetchingUrls": "Fetching {{count}} URLs",
    "fetchingUrl": "Fetching {{url}}",
    "rejectedFetch": "Rejected fetch",
    "failedToFetch": "Failed to fetch",
    "success": "Success",
    "searching": "Searching",
    "searched": "Searched",
    "fetchingContent": "Fetching",
    "fetchedContent": "Fetched",
    "webSearchCompleted": "Web search completed",
    "webFetchCompleted": "Web fetch completed",
    "listedDirectory": "Listed directory",
    "fileContentNotAvailable": "File content not available"
  },

  "search": {
    "project": "Project",
    "allProjects": "All projects",
    "maxResults": "Max Results",
    "dateRange": "Date Range",
    "clearFilters": "Clear Filters",
    "noItemsMatch": "No items match the filter",
    "directoryEmpty": "Directory is empty",
    "filterItems": "Filter items...",
    "noResultsFound": "No results found",
    "searchResults": "Search Results",
    "searching": "Searching...",
    "searchConversations": "Search conversations...",
    "searchFilters": "Search Filters"
  },

  "fileSystem": {
    "selectDirectory": "Select Directory",
    "selectDirectoryButton": "Select Directory",
    "goToParent": "Go to parent directory",
    "goToHome": "Go to home directory",
    "name": "Name",
    "size": "Size",
    "dateModified": "Date Modified",
    "failedToLoadHome": "Failed to load home directory",
    "failedToLoadDirectory": "Failed to load directory contents",
    "failedToLoadVolumes": "Failed to load volumes",
    "failedToNavigateUp": "Failed to navigate to parent directory",
    "failedToNavigateTo": "Failed to navigate to specified path",
    "computer": "Computer",
    "clickToEditPath": "Click to edit path"
  },

  "mcp": {
    "title": "MCP Servers",
    "description": "Manage your Model Context Protocol server configurations",
    "noServersConfigured": "No MCP servers configured",
    "addFirstServer": "Add Your First Server",
    "addNewServer": "Add New Server",
    "importFromJson": "Import from JSON",
    "pasteJson": "Paste JSON",
    "loadingSettings": "Loading settings file...",
    "serverName": "Server Name",
    "command": "Command",
    "url": "URL",
    "httpUrl": "HTTP URL",
    "environment": "Environment",
    "headers": "Headers",
    "workingDirectory": "Working Directory",
    "timeout": "Timeout (milliseconds)",
    "trust": "Trust this server (bypass tool call confirmations)",
    "includedTools": "Included Tools",
    "excludedTools": "Excluded Tools",
    "requiresAuthentication": "Requires Authentication",
    "supportsOAuthDiscovery": "Supports OAuth Discovery",
    "clientId": "Client ID",
    "clientSecret": "Client Secret",
    "authorizationUrl": "Authorization URL",
    "tokenUrl": "Token URL",
    "scopes": "Scopes",
    "redirectUri": "Redirect URI",
    "tokenParameterName": "Token Parameter Name",
    "audiences": "Audiences",
    "trusted": "Trusted",
    "notTrusted": "Not Trusted",
    "deleteServer": "Delete MCP Server",
    "deleteConfirmation": "Are you sure you want to delete the MCP server {{serverName}}? This action cannot be undone and will permanently remove the server from your settings.json file.",
    "deleteServerButton": "Delete Server",
    "addNewMcpServer": "Add New MCP Server",
    "sseEndpoint": "SSE endpoint URL for the MCP server.",
    "httpEndpoint": "HTTP endpoint URL for the MCP server.",
    "environmentDescription": "Environment variables necessary for this MCP server.",
    "headersDescription": "Headers necessary for this MCP server. Only applicable to URL and HTTP URL MCP servers.",
    "workingDirectoryDescription": "Working directory for the server command.",
    "oauthClientDescription": "OAuth client identifier. Optional with dynamic registration.",
    "oauthSecretDescription": "OAuth client secret. Optional for public clients.",
    "oauthAuthUrlDescription": "OAuth authorization endpoint. Auto-discovered if omitted.",
    "oauthTokenUrlDescription": "OAuth token endpoint. Auto-discovered if omitted.",
    "oauthScopesDescription": "Required OAuth scopes.",
    "oauthRedirectDescription": "Custom redirect URI. Defaults to http://localhost:7777/oauth/callback.",
    "oauthTokenParamDescription": "Query parameter name for tokens in SSE URLs.",
    "oauthAudiencesDescription": "Audiences for which the token is valid.",
    "argumentsDescription": "Arguments to pass to the command above.",
    "enterArgument": "Enter an argument",
    "enterScope": "Enter a scope",
    "enterAudience": "Enter an audience",
    "writeArgsHere": "Write args here",
    "basicConfiguration": "Basic Configuration",
    "transportType": "Transport Type",
    "stdioTransport": "Stdio (Local Command)",
    "sseTransport": "SSE (Server-Sent Events)",
    "httpTransport": "HTTP (HTTP Streaming)",
    "commandPlaceholder": "e.g., python -m my_mcp_server",
    "arguments": "Arguments (comma-separated)",
    "argumentsPlaceholder": "e.g., --port, 8080, --verbose",
    "sseUrl": "SSE URL",
    "sseUrlPlaceholder": "http://localhost:8080/sse",
    "httpUrlPlaceholder": "http://localhost:3000/mcp",
    "advancedSettings": "Advanced Settings",
    "workingDirectoryPlaceholder": "./server-directory",
    "authentication": "Authentication",
    "enableOAuth": "Enable OAuth 2.0 Authentication",
    "scopesPlaceholder": "e.g., read, write, admin",
    "toolFiltering": "Tool Filtering",
    "includeTools": "Include Tools (whitelist, comma-separated)",
    "excludeTools": "Exclude Tools (blacklist, comma-separated)",
    "includeToolsPlaceholder": "e.g., safe_tool, file_reader, data_processor",
    "excludeToolsPlaceholder": "e.g., dangerous_tool, file_deleter",
    "toolFilteringDescription": "Exclude tools take precedence over include tools. Leave both empty to use all available tools.",
    "notConfigured": "Not configured",
    "oauth": "OAuth",
    "tools": "tools",
    "enterServerName": "Enter server name",
    "enterCommand": "Enter the command",
    "enterClientId": "Enter the MCP server's client ID",
    "enterClientSecret": "Enter the MCP server's client secret",
    "enterAuthUrl": "Enter the MCP server's authorization URL",
    "enterTokenUrl": "Enter the MCP server's token URL",
    "enterRedirectUri": "Enter the MCP server's redirect URI",
    "enterTokenParam": "Enter the MCP server's token parameter name"
  },

  "backend": {
    "geminiCli": "Gemini CLI",
    "qwenCode": "Qwen Code",
    "geminiDesktop": "Gemini Desktop",
    "qwenDesktop": "Qwen Desktop",
    "gemini": "Gemini",
    "qwen": "Qwen",
    "backend": "Backend",
    "configuration": "Configuration",
    "authenticationMethod": "Authentication Method",
    "apiKey": "API Key",
    "baseUrl": "Base URL",
    "model": "Model",
    "oauth": "OAuth",
    "googleOAuth": "Google OAuth",
    "vertexAi": "Vertex AI",
    "cloudShell": "Cloud Shell",
    "googleCloudProjectId": "Google Cloud Project ID",
    "locationRegion": "Location/Region",
    "geminiApiKey": "Gemini API Key",
    "enterApiKey": "Enter your Gemini API key",
    "getApiKeyFrom": "Get your API key from",
    "googleAiStudio": "Google AI Studio",
    "enterProjectId": "your-project-id",
    "enterLocation": "us-central1",
    "oauthFreeRequests": "1000 free requests per day, 60 free requests per minute.",
    "cloudShellAutomatic": "This method works automatically in Google Cloud Shell environments",
    "qwenConfiguration": "Qwen Code Configuration",
    "geminiModels": {
      "pro": "Gemini 2.5 Pro",
      "flash": "Gemini 2.5 Flash",
      "flashLite": "Gemini 2.5 Flash-Lite"
    },
    "stillWaiting": "Still waitin'...",
    "installMessage": "Please install {{backendName}} and make sure it's available in your PATH.",
    "installMessageGemini": "Please install {{backendName}} and make sure it's available in your PATH. You can install it from {{downloadUrl}}.",
    "mcpCapabilities": "MCP servers extend {{modelName}}'s capabilities by providing access to external tools and data sources.",
    "mcpToolExecution": "MCP tools, included in this MCP server, that {{backendName}} may execute.",
    "mcpToolExclusion": "MCP tools, included in this MCP server, that {{backendName}} may not execute. Takes precedence over Included Tools.",
    "mcpCommandDescription": "Command executed by {{backendName}} to start the MCP server.",
    "projectsDescription": "All of your previous discussions with {{appName}}, right here."
  },

  "validation": {
    "apiKeyRequired": "API Key is required for API key authentication",
    "projectIdRequired": "Google Cloud Project ID is required for Vertex AI",
    "locationRequired": "Google Cloud Location is required for Vertex AI",
    "modelRequired": "At least one model must be available",
    "defaultModelRequired": "Default model is required",
    "defaultModelMustBeAvailable": "Default model must be one of the available models",
    "baseUrlRequired": "Base URL is required",
    "invalidBaseUrl": "Invalid Base URL format",
    "unknownBackendType": "Unknown backend type",
    "serverNameRequired": "Server name is required",
    "serverNameTooShort": "Server name must be at least 2 characters long",
    "serverNameInvalidChars": "Server name can only contain letters, numbers, underscores, and hyphens",
    "commandRequired": "Command is required for stdio transport",
    "invalidWorkingDirectory": "Working directory should not contain relative paths (..)",
    "urlRequired": "URL is required for SSE transport",
    "httpUrlRequired": "HTTP URL is required for HTTP transport",
    "invalidUrl": "Please enter a valid URL",
    "invalidHttpUrl": "Please enter a valid HTTP URL",
    "timeoutTooLow": "Timeout must be at least 1000ms (1 second)",
    "timeoutTooHigh": "Timeout cannot exceed 3600000ms (1 hour)",
    "oauthScopesEmpty": "OAuth scopes cannot be empty",
    "invalidRedirectUri": "OAuth redirect URI must be a valid URL",
    "invalidAuthUrl": "OAuth authorization URL must be a valid URL",
    "invalidTokenUrl": "OAuth token URL must be a valid URL",
    "toolsOverlap": "Tools cannot be both included and excluded: {{tools}}",
    "duplicateServerName": "Duplicate server name: \"{{name}}\""
  },

  "warnings": {
    "cliNotFound": "{{backendName}} not found",
    "modelUnavailable": "Model unavailable",
    "geminiFlashLiteUnavailable": "Unfortunately, Gemini 2.5 Flash-Lite isn't usable, due to thinking issues. See here for more details:",
    "officialRepository": "the official repository",
    "loginNotSupported": "Login not supported in {{appName}}",
    "oauthNotSupported": "Currently, authentication with OAuth through {{appName}} isn't supported.",
    "oauthNotSupportedQwen": "Currently, authentication with OAuth through {{appName}} isn't supported when using the {{backendName}} backend.",
    "loginInstructions": "To login, please first use the CLI directly for authentication."
  },

  "header": {
    "fromCreatorsOf": "From the creators of",
    "languageSwitcher": "Change language",
    "currentLanguage": "Current language: {{language}}",
    "directoryPanel": "Directory"
  },

  "homeDashboard": {
    "tagline": "Your ideas for the future are just a click away.",
    "user": "User",
    "generating": "Generating...",
    "rawJsonButton": "Raw JSON",
    "rawJsonTitle": "Message Raw JSON"
  },

  "about": {
    "title": "{{appName}}",
    "version": "Version {{version}}",
    "description": "A powerful, modern desktop and web UI for **Gemini CLI** and **Qwen Code**. Built with Tauri and web technologies. Cross-platform, open-source on",
    "github": "GitHub",
    "features": {
      "geminiModels": "• Choose between Gemini models (Gemini 2.5 Pro, Gemini 2.5 Flash, Gemini 2.5 Flash-Lite)",
      "qwenProviders": "• Use **Qwen.ai OAuth/custom OpenAI-compatible providers** and models with Qwen Code",
      "messaging": "• Send messages to/from AI and receive response; handle tool call requests; Markdown support",
      "thoughtProcess": "• Observe Gemini's **thought process**",
      "fileDiffs": "• View and handle edit requests with clear file diffs"
    },
    "feature1": "Choose between Gemini models (Gemini 2.5 Pro, Gemini 2.5 Flash, Gemini 2.5 Flash-Lite)",
    "feature2": "Use **Qwen.ai OAuth/custom OpenAI-compatible providers** and models with Qwen Code",
    "feature3": "Send messages to/from AI and receive response; handle tool call requests; Markdown support",
    "feature4": "Observe Gemini's **thought process**",
    "feature5": "View and handle edit requests with clear file diffs",
    "copyright": "© {{year}} {{appName}}. All rights reserved.",
    "fromCreators": "From the creators of"
  },

  "errors": {
    "failedToLoadProjects": "Failed to load projects.",
    "failedToAddProject": "Failed to add project. Please try again.",
    "failedToCreateDiscussion": "Failed to create new discussion:",
    "failedToLoadChats": "Failed to load recent chats",
    "noChatsFound": "No previous chats found.",
    "searchFailed": "Search failed:",
    "failedToOpenDialog": "Failed to open file dialog. Please try again.",
    "networkError": "Network error occurred",
    "unknownError": "An unknown error occurred",
    "invalidInput": "Invalid input provided",
    "permissionDenied": "Permission denied",
    "fileNotFound": "File not found",
    "directoryNotFound": "Directory not found",
    "failedToGetSettingsPath": "Failed to get settings file path:",
    "failedToLoadSettings": "Failed to load MCP servers from settings file:",
    "failedToSaveSettings": "Failed to save MCP servers to settings file:",
    "failedToLoadProjectData": "Failed to load project data."
  },

  "time": {
    "justNow": "Just now",
    "minutesAgo": "{{count}}m ago",
    "hoursAgo": "{{count}}h ago",
    "daysAgo": "{{count}}d ago",
    "minuteAgo": "{{count}} minute ago",
    "minuteAgo_other": "{{count}} minutes ago",
    "hourAgo": "{{count}} hour ago",
    "hourAgo_other": "{{count}} hours ago",
    "dayAgo": "{{count}} day ago",
    "dayAgo_other": "{{count}} days ago",
    "weekAgo": "{{count}} week ago",
    "weekAgo_other": "{{count}} weeks ago",
    "monthAgo": "{{count}} month ago",
    "monthAgo_other": "{{count}} months ago",
    "yearAgo": "{{count}} year ago",
    "yearAgo_other": "{{count}} years ago"
  },

  "recentChats": {
    "title": "Recent Chats",
    "started": "Started {{date}}",
    "messageCount": "{{count}} message",
    "messageCount_other": "{{count}} messages"
  },

  "accessibility": {
    "backToHome": "Back to home",
    "backToProjects": "Back to projects",
    "goToParentDirectory": "Go to parent directory",
    "goToHomeDirectory": "Go to home directory",
    "endChat": "End chat"
  },
  "directoryPanel": {
    "title": "Directory",
    "noContent": "No directory content"
  }
}
